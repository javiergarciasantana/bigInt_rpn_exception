#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/usuario/practicas/AyEDA/PR3/src/big_int.h
number.h
/home/usuario/practicas/AyEDA/PR3/src/number.h
big_int_bad_digit.h
/home/usuario/practicas/AyEDA/PR3/src/big_int_bad_digit.h
big_int_division_by_zero.h
/home/usuario/practicas/AyEDA/PR3/src/big_int_division_by_zero.h
big_int_base_not_implemented.h
/home/usuario/practicas/AyEDA/PR3/src/big_int_base_not_implemented.h

/home/usuario/practicas/AyEDA/PR3/src/big_int_bad_digit.h
big_int_exception.h
/home/usuario/practicas/AyEDA/PR3/src/big_int_exception.h

/home/usuario/practicas/AyEDA/PR3/src/big_int_base_not_implemented.h
bits/stdc++.h
-

/home/usuario/practicas/AyEDA/PR3/src/big_int_division_by_zero.h

/home/usuario/practicas/AyEDA/PR3/src/big_int_exception.h
exception
-
bits/stdc++.h
-

/home/usuario/practicas/AyEDA/PR3/src/big_int_main.cc
rpn_number.h
/home/usuario/practicas/AyEDA/PR3/src/rpn_number.h

/home/usuario/practicas/AyEDA/PR3/src/number.h
fstream
-
iostream
-
bits/stdc++.h
-
vector
-
string
-
cassert
-
cmath
-
stack
-

/home/usuario/practicas/AyEDA/PR3/src/rpn_number.h
big_int.h
/home/usuario/practicas/AyEDA/PR3/src/big_int.h

